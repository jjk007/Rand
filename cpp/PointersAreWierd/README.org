* Take away

So in *C++* a pointer of type =double= can point a double variable, an
array and a vector. This can become confusing at times.

You can write methods where it takes in a double pointer as an
argument and you effectively pass the pointer to a vector or an
array. While doing this make sure you also pass the size of the vector
or array as well because these information cannot be obtained from the
pointers we have.

Also note that:
#+BEGIN_SRC cpp-mode
// if foo is of type double*
//then
double x = foo[index];
//is the same as
double x =*(foo+index);
#+END_SRC

* Importantly

If you don't know the size of the array you are pointing to then this
is a huge problem.

if we go out of bound when dereferencing an array pointer then unlike
getting an exception when we are using the array straight forward we
will still get some gibberish value using the pointer method because
we are just referencing to the next pointer which can be *anything* or
*NULL* , which is useless and buggy. So don't forget to pass the size.
